"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[635],{6772:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var r=s(7458),t=s(9284),a=s(3154);const c={title:"Math",description:"Math Methods"},l="Math Methods",d={id:"methos/math",title:"Math",description:"Math Methods",source:"@site/docs/methos/math.mdx",sourceDirName:"methos",slug:"/methos/math",permalink:"/doumi/docs/methos/math",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Math",description:"Math Methods"},sidebar:"docSidebar",previous:{title:"Lang",permalink:"/doumi/docs/methos/lang"},next:{title:"Object",permalink:"/doumi/docs/methos/object"}},i={},h=[{value:"average",id:"average",level:2},{value:"between",id:"between",level:2},{value:"clamp",id:"clamp",level:2},{value:"sum",id:"sum",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"math-methods",children:"Math Methods"}),"\n",(0,r.jsx)(n.h2,{id:"average",children:"average"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Computes the average of the values"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Since"}),": ",(0,r.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,r.jsx)(a.Z,{datas:[{param:"value",type:"number[]",description:"The values to calculate."}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(a.Z,{datas:[{type:"number",description:"Returns the average of values"}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"declare function average(values: number[]): number;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"average([1, 2, 3]); // 2\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"between",children:"between"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Checks if n is between start and up to end"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Since"}),": ",(0,r.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,r.jsx)(a.Z,{datas:[{param:"number",type:"number",description:"The number to check."},{param:"start",type:"number",description:"The start of the range."},{param:"end",type:"number",description:"The end of the range."}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(a.Z,{datas:[{type:"boolean",description:"Returns `true` if number is in the range, else `false`."}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"declare function between(number: number, start: number, end: number): boolean;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"between(3, 1, 5); // true\nbetween(8, 1, 5); // false\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"clamp",children:"clamp"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Clamp number"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Since"}),": ",(0,r.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,r.jsx)(a.Z,{datas:[{param:"number",type:"number",description:"The number to clamp"},{param:"lower",type:"number",description:"The lower bound"},{param:"upper",type:"number",description:"The upper bound"}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(a.Z,{datas:[{type:"number",description:"Returns the clamped number"}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"declare function clamp(number: number, lower: number, upper: number): number;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"clamp(3, 1, 5); // 3\nclamp(8, 1, 5); // 5\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"sum",children:"sum"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Computes the sum of the values"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Since"}),": ",(0,r.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,r.jsx)(a.Z,{datas:[{param:"value",type:"number[]",description:"The values to calculate."}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(a.Z,{datas:[{type:"number",description:"Returns the sum of `values`"}]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"declare function sum(values: number[]): number;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"sum([1, 2, 3]); // 6\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);