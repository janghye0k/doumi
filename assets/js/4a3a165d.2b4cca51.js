"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[778],{3511:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>a,metadata:()=>t,toc:()=>j});var l=s(7458),r=s(9284),i=s(3154);const a={title:"Lang",description:"Lang Methods"},c="Lang Methods",t={id:"methos/lang",title:"Lang",description:"Lang Methods",source:"@site/docs/methos/lang.mdx",sourceDirName:"methos",slug:"/methos/lang",permalink:"/doumi/docs/methos/lang",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Lang",description:"Lang Methods"},sidebar:"docSidebar",previous:{title:"Function",permalink:"/doumi/docs/methos/function"},next:{title:"Math",permalink:"/doumi/docs/methos/math"}},d={},j=[{value:"is",id:"is",level:2},{value:"isArray",id:"isarray",level:2},{value:"isArrayLike",id:"isarraylike",level:2},{value:"isBlank",id:"isblank",level:2},{value:"isBoolean",id:"isboolean",level:2},{value:"isDate",id:"isdate",level:2},{value:"isDateLike",id:"isdatelike",level:2},{value:"isElement",id:"iselement",level:2},{value:"isEmpty",id:"isempty",level:2},{value:"isEqual",id:"isequal",level:2},{value:"isError",id:"iserror",level:2},{value:"isFunction",id:"isfunction",level:2},{value:"isMap",id:"ismap",level:2},{value:"isNull",id:"isnull",level:2},{value:"isNullish",id:"isnullish",level:2},{value:"isNumber",id:"isnumber",level:2},{value:"isObject",id:"isobject",level:2},{value:"isPlainObject",id:"isplainobject",level:2},{value:"isRegExp",id:"isregexp",level:2},{value:"isSet",id:"isset",level:2},{value:"isString",id:"isstring",level:2},{value:"isSymbol",id:"issymbol",level:2},{value:"isUndefined",id:"isundefined",level:2},{value:"isWeakMap",id:"isweakmap",level:2},{value:"isWeakSet",id:"isweakset",level:2},{value:"tagType",id:"tagtype",level:2}];function h(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"lang-methods",children:"Lang Methods"}),"\n",(0,l.jsx)(n.h2,{id:"is",children:"is"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"object",type:"any",description:"The object (constructor) to used for comparison"},{param:"value",type:"any",description:"The value to compare"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if the `value` is `object`, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const is: <T extends ConstructorObject>(\n  object: T,\n  value: unknown\n) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"is(String, 'str'); // true\nis(Boolean, true); // true\nis(Boolean, 'true'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isarray",children:"isArray"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is array"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is any[]",description:"Retruns `true` if `value` is array, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isArray: <T = any>(value: unknown) => value is T[];\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isArray([1, 2, 3]); // true\nisArray(new Array()); // true\nisArray(1); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isarraylike",children:"isArrayLike"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is array-like"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is T",description:"Retruns `true` if `value` is array-like, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isArrayLike: <T extends ArrayLike<any>>(value: any) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isArrayLike([1, 2, 3]); // true\nisArrayLike('string'); // true\nisArrayLike(1); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isblank",children:"isBlank"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is blank"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value.length` is falsy, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isBlank: (value: unknown) => boolean;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isBlank(''); // true\nisBlank(undefined); // true\nisBlank('a'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isboolean",children:"isBoolean"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is boolean"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is boolean",description:"Retruns `true` if `value` is boolean, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isBoolean: (value: unknown) => value is boolean;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isBoolean(true); // true\nisBoolean('true'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isdate",children:"isDate"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is date"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is Date",description:"Retruns `true` if `value` is date, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isDate: (value: unknown) => value is Date;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isDate(new Date()); // true\nisDate('2024-01-01'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isdatelike",children:"isDateLike"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is date-like"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is date-like, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isDateLike: <T = unknown>(value: T) => boolean;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isDateLike(new Date()); // true\nisDateLike('2024-01-01'); // true\nisDateLike(100000000); // true\nisDateLike('string'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"iselement",children:"isElement"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is element"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is Element",description:"Retruns `true` if `value` is element, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isElement: (value: unknown) => value is Element;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isElement(document.body); // true\nisElement('<div></div>'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isempty",children:"isEmpty"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is empty"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is empty, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isEmpty: (value: unknown) => boolean;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isEmpty([]); // true\nisEmpty({}); // true\nisEmpty(new Set()); // true\nisEmpty(false); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isequal",children:"isEqual"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check values are equal"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"valu",type:"any",description:"value"},{param:"compar",type:"any",description:"compare"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if the values are equal, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isEqual: (value: any, compare: any) => boolean;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const obj = { a: 1 };\n\nisEqual(obj, obj); // true\nisEqual(obj, { ...obj }); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"iserror",children:"isError"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is Error"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is Error",description:"Retruns `true` if `value` is error, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isError: (value: unknown) => value is Error;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isError(new Error()); // true\nisError('error'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isfunction",children:"isFunction"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is function"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is Function",description:"Retruns `true` if `value` is function, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isFunction: (value: unknown) => value is (...arg: any[]) => any;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isFunction(() => null); // true\nisFunction({}); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"ismap",children:"isMap"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is Map"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is Map, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isMap: <T = Map<any, any>>(value: unknown) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isMap(new Map()); // true\nisMap({ a: 1, b: 2 }); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isnull",children:"isNull"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is null"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is null",description:"Retruns `true` if `value` is null, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isNull: (value: unknown) => value is null;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isNull(null); // true\nisNull(true); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isnullish",children:"isNullish"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is nullish"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is null or undefined, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isNullish: (value: unknown) => value is null | undefined;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isNullish(null); // true\nisNullish(undefined); // true\nisNullish(0); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isnumber",children:"isNumber"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is number"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is number",description:"Retruns `true` if `value` is number, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isNumber: (value: unknown) => value is number;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isNumber(123); // true\nisNumber('123'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isobject",children:"isObject"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is object-like"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is object-like, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isObject: <T extends object = Dictionary<any>>(\n  value: unknown\n) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isObject({}); // true\nisObject(() => false); // true\nisObject([]); // true\nisObject(1); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isplainobject",children:"isPlainObject"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is plain object"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is plain object, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isPlainObject: <T extends Object = Dictionary<any> & Object>(\n  value: unknown\n) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isPlainObject({}); // true\nisPlainObject(new Map()); // false\nisPlainObject(1); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isregexp",children:"isRegExp"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is RegExp"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is RegExp",description:"Retruns `true` if `value` is RegExp, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isRegExp: (value: unknown) => value is RegExp;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isRegExp(/\\d/gi); // true\nisRegExp(new RegExp()); // true\nisRegExp('d'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isset",children:"isSet"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is Set"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is Set, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isSet: <T extends Set<any> = Set<any>>(\n  value: unknown\n) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isSet(new Set()); // true\nisSet([1, 2, 3]); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isstring",children:"isString"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is string"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is string",description:"Retruns `true` if `value` is string, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isString: (value: unknown) => value is string;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isString('is this string?'); // true\nisString(0); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"issymbol",children:"isSymbol"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is symbol"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is symbol",description:"Retruns `true` if `value` is symbol, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isSymbol: (value: unknown) => value is symbol;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isSymbol(Symbol('a')); // true\nisSymbol('a'); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isundefined",children:"isUndefined"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is undefined"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"value is undefined",description:"Retruns `true` if `value` is undefined, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isUndefined: (value: unknown) => value is undefined;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isUndefined(undefined); // true\nisUndefined(0); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isweakmap",children:"isWeakMap"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is WeakMap"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is WeakMap, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isWeakMap: <T extends WeakMap<any, any> = WeakMap<any, any>>(\n  value: unknown\n) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isWeakMap(new WeakMap()); // true\nisWeakMap(new Map()); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"isweakset",children:"isWeakSet"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Check value is WeakSet"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"value",type:"any",description:"The value to check"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"boolean",description:"Retruns `true` if `value` is WeakSet, else `false`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const isWeakSet: <T extends WeakSet<any> = WeakSet<any>>(\n  value: unknown\n) => value is T;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"isWeakSet(new WeakSet()); // true\nisWeakSet(new Set()); // false\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.h2,{id:"tagtype",children:"tagType"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Get Object.prototype.toString() type of value"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Since"}),": ",(0,l.jsx)(n.em,{children:"0.1.0"})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,l.jsx)(i.Z,{datas:[{param:"valu",type:"any",description:"The value to check type"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Returns"})}),"\n",(0,l.jsx)(i.Z,{datas:[{type:"string",description:"The prototype of `value`"}]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Declaration"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"declare const tagType: (value: any) => string;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"tagType({}); // 'Object'\ntagType(1); // 'Number'\n"})})]})}function x(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);